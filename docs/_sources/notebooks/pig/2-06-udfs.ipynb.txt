{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "# Funciones de Usuario (udfs)\n",
    "\n",
    "Apache Pig permite la ejecución de funciones escritas en Java, Jython (http://www.jython.org/index.html), JavaScript, Ruby, Groovy y Python. Información detallada de la ejecución de udfs en estos lenguajes puede ser obtenida en https://pig.apache.org/docs/latest/udf.html#python-udfs.\n",
    "\n",
    "\n",
    "Véase http://www.jython.org/index.html. Para su uso, el script de Python debe estar ubicado en el directorio de trabajo. Para poder usar Jython, hay dos opciones; en la primera se debe indicar la ubicación del inteprete en la variable `PIG_CLASSPATH`. En algunos casos es necesario establacer la variable `PYTHONPATH` para que Pig pueda compilar las udfs. Para mayor información revise https://pig.apache.org/docs/latest/udf.html#jython-udfs.\n",
    "\n",
    "(deprecated) En la segunda se puede usar `org.apache.pig.scripting.jython.JythonScriptEngin` como intérprete."
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "%load_ext bigdata\n",
    "%pig_init"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing udf.tsv\n"
     ]
    }
   ],
   "source": [
    "%%writefile udf.tsv\n",
    "A\tB\t1\n",
    "C\tD\t2\n",
    "E\tF\t3\n",
    "G\tH\t4\n",
    "I\tJ\t5"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing pigudf.py\n"
     ]
    }
   ],
   "source": [
    "%%writefile pigudf.py\n",
    "\n",
    "#from pig_util import outputSchema\n",
    "\n",
    "@outputSchema(\"as:int\")\n",
    "def square(num):\n",
    "    if num == None:\n",
    "        return None\n",
    "    return ((num) * (num))\n",
    "\n",
    "@outputSchema(\"word:chararray\")\n",
    "def concatenar(word1, word2):\n",
    "    return (word1 + word2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "(AB,1)\n",
      "(CD,4)\n",
      "(EF,9)\n",
      "(GH,16)\n",
      "(IJ,25)\n"
     ]
    }
   ],
   "source": [
    "%%pig \n",
    "--\n",
    "-- registra las funciones en el script `pigudf.py`.\n",
    "--\n",
    "REGISTER /Users/jdvelasq/jython2.7.0/jython.jar\n",
    "REGISTER 'pigudf.py' using jython as myudf;\n",
    "\n",
    "u = LOAD 'udf.tsv' USING PigStorage() \n",
    "    AS (c1:CHARARRAY, \n",
    "        c2:CHARARRAY, \n",
    "        c3:INT);\n",
    "\n",
    "b = FOREACH u GENERATE myudf.concatenar(c1, c2), myudf.square(c3);\n",
    "DUMP b;"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Piggy Bank**\n",
    "\n",
    "Son funciones de usuario escritas en Java por la comunidad. "
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "---"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "!rm pigudf.py pig_*  udf.tsv"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.5"
  },
  "toc-autonumbering": false
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
