{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "HTML y CSS básicos\n",
    "===\n",
    "\n",
    "* *60 min* | Última modificación: Febrero 04, 2020."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "https://learn.shayhowe.com/html-css/building-your-first-web-page/"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Página mínima"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Writing index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "  <head>\n",
    "    <meta charset=\"utf-8\">\n",
    "    <title>Hello World</title>\n",
    "  </head>\n",
    "  <body>\n",
    "    <h1>Hello World</h1>\n",
    "    <p>This is a web page.</p>\n",
    "  </body>\n",
    "</html>\n"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-01](../../assets/html-01.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Parágrafos, encabezados y citas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "  <head>\n",
    "    <meta charset=\"utf-8\">\n",
    "    <title>Hello World</title>\n",
    "  </head>\n",
    "  <body>\n",
    "    <h1>Nivel 1</h1>\n",
    "    \n",
    "    <h2>Nivel 2</h2>\n",
    "    \n",
    "    <p>\n",
    "        Markdown es un lenguaje de marcado ligero creado por John Gruber que \n",
    "        trata de conseguir la máxima legibilidad y facilidad de publicación \n",
    "        tanto en sus forma de entrada como de salida, inspirándose en \n",
    "        muchas convenciones existentes para marcar mensajes de correo \n",
    "        electrónico usando texto plano. \n",
    "    </p>\n",
    "    \n",
    "    <blockquote>\n",
    "        Markdown es un lenguaje de marcado ligero creado por John Gruber que \n",
    "        trata de conseguir la máxima legibilidad y facilidad de publicación \n",
    "        tanto en sus forma de entrada como de salida, inspirándose en \n",
    "        muchas convenciones existentes para marcar mensajes de correo \n",
    "        electrónico usando texto plano.\n",
    "    </blockquote>\n",
    "    \n",
    "    <p title=\"--> tooltip <--\">\n",
    "        Parrafo con tooltip.\n",
    "    </p>\n",
    "    \n",
    "    \n",
    "  </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-06](../../assets/html-06.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Enfasis"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "  <head>\n",
    "    <meta charset=\"utf-8\">\n",
    "    <title>Hello World</title>\n",
    "  </head>\n",
    "  <body>\n",
    "    \n",
    "    <p>Algunas de estas palabras son <em>enfatizadas</em>.</p>\n",
    "\n",
    "    <p>Algunas de estas palabras son <i>enfatizadas</i>.</p>\n",
    "\n",
    "    <p>Algunas de estas palabras también son <em>enfatizadas</em>.</p>\n",
    "\n",
    "    <p>Use dos asteriscos para <strong>énfasis fuerte</strong>.</p>\n",
    "\n",
    "    <p>O si lo prefiere dos <strong>guiones bajos</strong>.</p>\n",
    "    \n",
    "  </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-07](../../assets/html-07.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Listas sin numeración"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<ul>     \n",
    "  <li>Uno</li>  \n",
    "  <li>Dos</li>   \n",
    "  <li>Tres</li> \n",
    "</ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<ul>   \n",
    "  <li>Uno</li>   \n",
    "  <li>Dos</li>    \n",
    "  <li>Tres</li> \n",
    " </ul>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Listas enumeradas"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<ol> \n",
    "  <li>Uno</li>  \n",
    "  <li>Dos</li>   \n",
    "  <li>Tres</li> \n",
    " </ol>"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "  <head>\n",
    "    <meta charset=\"utf-8\">\n",
    "    <title>Hello World</title>\n",
    "  </head>\n",
    "  <body>\n",
    "    \n",
    "    <h1>Listas sin numeración</h1>\n",
    "\n",
    "    <ul>     \n",
    "      <li>Uno</li>  \n",
    "      <li>Dos</li>   \n",
    "      <li>Tres</li> \n",
    "    </ul>\n",
    "    \n",
    "    <h1>Listas enumeradas</h1>\n",
    "    \n",
    "    <ol> \n",
    "      <li>Uno</li>  \n",
    "      <li>Dos</li>   \n",
    "      <li>Tres</li> \n",
    "    </ol>\n",
    "    \n",
    "    <h1>Listas tipo diccionario</h1>\n",
    "    <ol>\n",
    "        <li> <p>Uno </p>  <p>texto texto texto</p>  </li>\n",
    "        <li> <p>Dos </p>  <p>texto texto texto</p>  </li>\n",
    "        <li> <p>Tres</p>  <p>texto texto texto</p>  </li>\n",
    "    </ol>\n",
    "    \n",
    "  </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-08](../../assets/html-08.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<ol>\n",
    "  <li>Uno</li>\n",
    "  <li>Dos</li>\n",
    "  <li>Tres</li> \n",
    "</ol>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<ol>\n",
    "<li> <p>Uno </p>  <p>texto texto texto</p>  </li>\n",
    "<li> <p>Dos </p>  <p>texto texto texto</p>  </li>\n",
    "<li> <p>Tres</p>  <p>texto texto texto</p>  </li>\n",
    "</ol>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<ol>\n",
    "<li> <p>Uno </p>  <p>texto texto texto</p>  </li>\n",
    "<li> <p>Dos </p>  <p>texto texto texto</p>  </li>\n",
    "<li> <p>Tres</p>  <p>texto texto texto</p>  </li>\n",
    "</ol>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Listas tipo diccionario"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "        <dl>\n",
    "            <dt>Coffee</dt>\n",
    "            <dd>Black hot drink</dd>\n",
    "            <dt>Milk</dt>\n",
    "            <dd>White cold drink</dd>\n",
    "        </dl>\n",
    "\n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-09](../../assets/html-09.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Vínculos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "        <p>Este es un vínculo a <a href=\"http://www.google.com\">GOOGLE</a>.</p>\n",
    "        \n",
    "        <footer>\n",
    "            <p>Autor: Juan David Velasquez</p>\n",
    "            <p>\n",
    "                Correo: <a href=\"mailto:jdvelasq@unal.edu.co\">\n",
    "                jdvelasq@unal.edu.co</a>.\n",
    "            </p>\n",
    "        </footer>\n",
    "\n",
    "        <nav>\n",
    "            <a href=\"/html/\">HTML</a> |\n",
    "            <a href=\"/css/\">CSS</a> |\n",
    "            <a href=\"/js/\">JavaScript</a> |\n",
    "            <a href=\"/jquery/\">jQuery</a>\n",
    "        </nav>\n",
    "        \n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-10](../../assets/html-10.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Vínculos tipo referencia "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "        <p>\n",
    "            Estos son vinculos referenciados a \n",
    "            <a href=\"https://www.continuum.io\" title=\"Anaconda\">Continuum Analytics</a> \n",
    "            y <a href=\"https://www.python.org \" title=\"Python\"> Python Software Fundation</a>.\n",
    "        <p>\n",
    "        \n",
    "        <br>\n",
    "        \n",
    "        <p>\n",
    "            Written by <a href=\"mailto:webmaster@example.com\">Jon Doe</a>.\n",
    "        </p>\n",
    "        \n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-11](../../assets/html-11.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Imágenes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "        <img src=\"../../assets/img_avatar1.png\" alt=\"assets/img_avatar1.png\" title=\"Titulo\" />  \n",
    "        \n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-1](../../assets/html-12.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Código fuente y salida de programas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "        <p>Se pueden crear bloques de código:</p>\n",
    "\n",
    "        <code>\n",
    "            <p>for (i = 1; i < 5; i++)</p>\n",
    "            <p>{</p>\n",
    "            <p>    printf('%d', i)</p>\n",
    "            <p>}</p>\n",
    "        </code>\n",
    "\n",
    "        <p>\n",
    "            O se puede colocar código en linea <code>cat out.1 out.2</code>.\n",
    "        </p>\n",
    "\n",
    "        <samp>Sample output from a computer program</samp>\n",
    "\n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-13](../../assets/html-13.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Tablas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Overwriting index.html\n"
     ]
    }
   ],
   "source": [
    "%%writefile index.html\n",
    "\n",
    "<!DOCTYPE html>\n",
    "<html lang=\"en\">\n",
    "    <head>\n",
    "        <meta charset=\"utf-8\">\n",
    "        <title>Hello World</title>\n",
    "      </head>\n",
    "    <body>\n",
    "    \n",
    "    <table>\n",
    "        <tr>\n",
    "            <th>January</th>\n",
    "            <th>February</th>\n",
    "            <th>March</th>\n",
    "        </tr>\n",
    "        <tr>\n",
    "            <td>31</td>\n",
    "            <td>28</td>\n",
    "            <td>31</td>\n",
    "        </tr>\n",
    "    </table>\n",
    "\n",
    "    </body>\n",
    "</html>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "![html-14](../../assets/html-14.png)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Comentarios"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<!-- comentario -->"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<!-- comentario -->"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Cajas"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:1px dotted black;\">\n",
    "Caja con borde punteado\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:1px dotted black;\">\n",
    "Caja con borde punteado\n",
    "</div>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:1px dashed yellowgreen;\">\n",
    "Caja con borde punteado verde\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:1px dashed yellowgreen;\">\n",
    "Caja con borde punteado verde\n",
    "</div>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:10px double yellowgreen;\">\n",
    "Caja con borde doble\n",
    "</div>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<div style=\"width:200px;height:100px;padding:10px;border:10px double yellowgreen;\">\n",
    "Caja con borde doble\n",
    "</div>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<h1 style=\"border:2px solid Tomato;\">Hola mundo cruel</h1>\n",
    "<h1 style=\"border:2px solid DodgerBlue;\">Hola mundo cruel</h1>\n",
    "<h1 style=\"border:2px solid Violet;\">Hola mundo cruel</h1>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Teclado"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<kbd>Keyboard input</kbd>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<kbd>Keyboard input</kbd>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Controles "
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<button>Click me</button>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<button>Click me</button>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<select>\n",
    "  <optgroup label=\"Swedish Cars\">\n",
    "    <option value=\"volvo\">Volvo</option>\n",
    "    <option value=\"saab\">Saab</option>\n",
    "  </optgroup>\n",
    "  <optgroup label=\"German Cars\">\n",
    "    <option value=\"mercedes\">Mercedes</option>\n",
    "    <option value=\"audi\">Audi</option>\n",
    "  </optgroup>\n",
    "</select>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<select>\n",
    "  <optgroup label=\"Swedish Cars\">\n",
    "    <option value=\"volvo\">Volvo</option>\n",
    "    <option value=\"saab\">Saab</option>\n",
    "  </optgroup>\n",
    "  <optgroup label=\"German Cars\">\n",
    "    <option value=\"mercedes\">Mercedes</option>\n",
    "    <option value=\"audi\">Audi</option>\n",
    "  </optgroup>\n",
    "</select>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<select>\n",
    "  <option value=\"volvo\">Volvo</option>\n",
    "  <option value=\"saab\">Saab</option>\n",
    "  <option value=\"opel\">Opel</option>\n",
    "  <option value=\"audi\">Audi</option>\n",
    "</select>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<select>\n",
    "  <option value=\"volvo\">Volvo</option>\n",
    "  <option value=\"saab\">Saab</option>\n",
    "  <option value=\"opel\">Opel</option>\n",
    "  <option value=\"audi\">Audi</option>\n",
    "</select>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<form oninput=\"x.value=parseInt(a.value)+parseInt(b.value)\">0\n",
    "  <input type=\"range\" id=\"a\" value=\"50\">100\n",
    "  +<input type=\"number\" id=\"b\" value=\"50\">\n",
    "  =<output name=\"x\" for=\"a b\"></output>\n",
    "</form>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<form oninput=\"x.value=parseInt(a.value)+parseInt(b.value)\">0\n",
    "  <input type=\"range\" id=\"a\" value=\"50\">100\n",
    "  +<input type=\"number\" id=\"b\" value=\"50\">\n",
    "  =<output name=\"x\" for=\"a b\"></output>\n",
    "</form>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<progress value=\"22\" max=\"100\"></progress>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<progress value=\"22\" max=\"100\"></progress>"
   ]
  },
  {
   "cell_type": "raw",
   "metadata": {},
   "source": [
    "<details>\n",
    "  <summary>Copyright 2016-2018.</summary>\n",
    "  <p> - by Juan David Velásquez. All Rights Reserved.</p>\n",
    "  <p>All content and graphics on this web site are the property of the author.</p>\n",
    "</details>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "<details>\n",
    "  <summary>Copyright 2016-2018.</summary>\n",
    "  <p> - by Juan David Velásquez. All Rights Reserved.</p>\n",
    "  <p>All content and graphics on this web site are the property of the author.</p>\n",
    "</details>"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Símbolos"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Haga click [Aquí](https://www.w3schools.com/charsets/ref_utf_symbols.asp)."
   ]
  }
 ],
 "metadata": {
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  },
  "nteract": {
   "version": "0.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
