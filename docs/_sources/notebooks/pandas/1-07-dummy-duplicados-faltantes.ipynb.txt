{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Variables dummy, casos duplicados y casos faltantes\n",
    "=======\n",
    "\n",
    "* *60 min* | Última modificación: Julio 04, 2019."
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Bibliografía**.\n",
    "\n",
    "> [pandas 0.18.1 documentation](http://pandas.pydata.org/pandas-docs/stable/index.html)  \n",
    "[10 Minutes to pandas](http://pandas.pydata.org/pandas-docs/stable/10min.html) "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "pandas.set_option('display.notebook_repr_html', False)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "   Sepal_Length  Sepal_Width  Petal_Length  Petal_Width Species\n",
       "0           5.1          3.5           1.4          0.2  setosa\n",
       "1           4.9          3.0           1.4          0.2  setosa\n",
       "2           4.7          3.2           1.3          0.2  setosa\n",
       "3           4.6          3.1           1.5          0.2  setosa\n",
       "4           5.0          3.6           1.4          0.2  setosa"
      ]
     },
     "execution_count": 5,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "df = pd.read_csv(\n",
    "    \"https://raw.githubusercontent.com/jdvelasq/datalabs/master/datasets/iris.csv\",\n",
    "    sep = ',',         \n",
    "    thousands = None,  \n",
    "    decimal = '.')     \n",
    "\n",
    "df.head()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Variables dummy"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     setosa  versicolor  virginica\n",
       "0         1           0          0\n",
       "1         1           0          0\n",
       "2         1           0          0\n",
       "3         1           0          0\n",
       "4         1           0          0\n",
       "5         1           0          0\n",
       "6         1           0          0\n",
       "7         1           0          0\n",
       "8         1           0          0\n",
       "9         1           0          0\n",
       "10        1           0          0\n",
       "11        1           0          0\n",
       "12        1           0          0\n",
       "13        1           0          0\n",
       "14        1           0          0\n",
       "15        1           0          0\n",
       "16        1           0          0\n",
       "17        1           0          0\n",
       "18        1           0          0\n",
       "19        1           0          0\n",
       "20        1           0          0\n",
       "21        1           0          0\n",
       "22        1           0          0\n",
       "23        1           0          0\n",
       "24        1           0          0\n",
       "25        1           0          0\n",
       "26        1           0          0\n",
       "27        1           0          0\n",
       "28        1           0          0\n",
       "29        1           0          0\n",
       "..      ...         ...        ...\n",
       "120       0           0          1\n",
       "121       0           0          1\n",
       "122       0           0          1\n",
       "123       0           0          1\n",
       "124       0           0          1\n",
       "125       0           0          1\n",
       "126       0           0          1\n",
       "127       0           0          1\n",
       "128       0           0          1\n",
       "129       0           0          1\n",
       "130       0           0          1\n",
       "131       0           0          1\n",
       "132       0           0          1\n",
       "133       0           0          1\n",
       "134       0           0          1\n",
       "135       0           0          1\n",
       "136       0           0          1\n",
       "137       0           0          1\n",
       "138       0           0          1\n",
       "139       0           0          1\n",
       "140       0           0          1\n",
       "141       0           0          1\n",
       "142       0           0          1\n",
       "143       0           0          1\n",
       "144       0           0          1\n",
       "145       0           0          1\n",
       "146       0           0          1\n",
       "147       0           0          1\n",
       "148       0           0          1\n",
       "149       0           0          1\n",
       "\n",
       "[150 rows x 3 columns]"
      ]
     },
     "execution_count": 7,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "##\n",
    "## genera variables dummies para variables categóricas.\n",
    "##\n",
    "pd.get_dummies(df.Species)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Inserción de filas"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {
    "scrolled": true
   },
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width    Species\n",
       "146           6.3          2.5           5.0          1.9  virginica\n",
       "147           6.5          3.0           5.2          2.0  virginica\n",
       "148           6.2          3.4           5.4          2.3  virginica\n",
       "149           5.9          3.0           5.1          1.8  virginica\n",
       "150           1.0          1.0           1.0          1.0     setosa"
      ]
     },
     "execution_count": 8,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## adición de una fila (al final)\n",
    "u = pandas.DataFrame({'Sepal_Length' : [1], \n",
    "                      'Sepal_Width' : [1], \n",
    "                      'Petal_Length' : [1], \n",
    "                      'Petal_Width' : [1], \n",
    "                      'Species' : ['setosa']})\n",
    "\n",
    "df.append(u, ignore_index = True).tail()"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Casos duplicados y datos faltantes"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([ 66,   9,  57,  12,  20,  34,  33,  43,  36,  99,  50,  82,  39,\n",
       "        64, 120, 132, 117, 118,  80, 107])"
      ]
     },
     "execution_count": 9,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## se crea un vector aleatorio de indices\n",
    "u = np.random.choice(\n",
    "    range(150), \n",
    "    size=20, \n",
    "    replace=False)\n",
    "u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "    Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "66           5.6          3.0           4.5          1.5  versicolor\n",
       "9            4.9          3.1           1.5          0.1      setosa\n",
       "57           4.9          2.4           3.3          1.0  versicolor\n",
       "12           4.8          3.0           1.4          0.1      setosa\n",
       "20           5.4          3.4           1.7          0.2      setosa"
      ]
     },
     "execution_count": 11,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## submuestra de data.frame original `x`\n",
    "y = df.loc[u].copy()\n",
    "y.head()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "    Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "0            5.6          3.0           4.5          1.5  versicolor\n",
       "1            4.9          3.1           1.5          0.1      setosa\n",
       "2            4.9          2.4           3.3          1.0  versicolor\n",
       "3            4.8          3.0           1.4          0.1      setosa\n",
       "4            5.4          3.4           1.7          0.2      setosa\n",
       "5            4.9          3.1           1.5          0.2      setosa\n",
       "6            5.5          4.2           1.4          0.2      setosa\n",
       "7            5.0          3.5           1.6          0.6      setosa\n",
       "8            5.5          3.5           1.3          0.2      setosa\n",
       "9            5.7          2.8           4.1          1.3  versicolor\n",
       "10           7.0          3.2           4.7          1.4  versicolor\n",
       "11           5.8          2.7           3.9          1.2  versicolor\n",
       "12           5.1          3.4           1.5          0.2      setosa\n",
       "13           5.6          2.9           3.6          1.3  versicolor\n",
       "14           6.9          3.2           5.7          2.3   virginica\n",
       "15           6.4          2.8           5.6          2.2   virginica\n",
       "16           7.7          3.8           6.7          2.2   virginica\n",
       "17           7.7          2.6           6.9          2.3   virginica\n",
       "18           5.5          2.4           3.8          1.1  versicolor\n",
       "19           7.3          2.9           6.3          1.8   virginica"
      ]
     },
     "execution_count": 12,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## cambia los nombres de las filas \n",
    "y.index = list(range(20))\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "array([14,  4, 15, 10,  2, 11,  6, 12, 19, 17])"
      ]
     },
     "execution_count": 13,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## de la submuestra `y` se hacen varios registros incompletos\n",
    "## cambiando varios valores en la columna `Sepal.Length` por NA\n",
    "u = np.random.choice(range(20), size=10, replace=False)\n",
    "u"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "    Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "14           6.9          3.2           5.7          2.3   virginica\n",
       "4            5.4          3.4           1.7          0.2      setosa\n",
       "15           6.4          2.8           5.6          2.2   virginica\n",
       "10           7.0          3.2           4.7          1.4  versicolor\n",
       "2            4.9          2.4           3.3          1.0  versicolor\n",
       "11           5.8          2.7           3.9          1.2  versicolor\n",
       "6            5.5          4.2           1.4          0.2      setosa\n",
       "12           5.1          3.4           1.5          0.2      setosa\n",
       "19           7.3          2.9           6.3          1.8   virginica\n",
       "17           7.7          2.6           6.9          2.3   virginica"
      ]
     },
     "execution_count": 14,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "y.iloc[u]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "    Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "0            5.6          3.0           4.5          1.5  versicolor\n",
       "1            4.9          3.1           1.5          0.1      setosa\n",
       "2            NaN          2.4           3.3          1.0  versicolor\n",
       "3            4.8          3.0           1.4          0.1      setosa\n",
       "4            NaN          3.4           1.7          0.2      setosa\n",
       "5            4.9          3.1           1.5          0.2      setosa\n",
       "6            NaN          4.2           1.4          0.2      setosa\n",
       "7            5.0          3.5           1.6          0.6      setosa\n",
       "8            5.5          3.5           1.3          0.2      setosa\n",
       "9            5.7          2.8           4.1          1.3  versicolor\n",
       "10           NaN          3.2           4.7          1.4  versicolor\n",
       "11           NaN          2.7           3.9          1.2  versicolor\n",
       "12           NaN          3.4           1.5          0.2      setosa\n",
       "13           5.6          2.9           3.6          1.3  versicolor\n",
       "14           NaN          3.2           5.7          2.3   virginica\n",
       "15           NaN          2.8           5.6          2.2   virginica\n",
       "16           7.7          3.8           6.7          2.2   virginica\n",
       "17           NaN          2.6           6.9          2.3   virginica\n",
       "18           5.5          2.4           3.8          1.1  versicolor\n",
       "19           NaN          2.9           6.3          1.8   virginica"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## casos con datos faltantes \n",
    "y.loc[u, 'Sepal_Length'] = np.nan\n",
    "y"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "145           6.7          3.0           5.2          2.3   virginica\n",
       "146           6.3          2.5           5.0          1.9   virginica\n",
       "147           6.5          3.0           5.2          2.0   virginica\n",
       "148           6.2          3.4           5.4          2.3   virginica\n",
       "149           5.9          3.0           5.1          1.8   virginica\n",
       "150           5.6          3.0           4.5          1.5  versicolor\n",
       "151           4.9          3.1           1.5          0.1      setosa\n",
       "152           NaN          2.4           3.3          1.0  versicolor\n",
       "153           4.8          3.0           1.4          0.1      setosa\n",
       "154           NaN          3.4           1.7          0.2      setosa\n",
       "155           4.9          3.1           1.5          0.2      setosa\n",
       "156           NaN          4.2           1.4          0.2      setosa\n",
       "157           5.0          3.5           1.6          0.6      setosa\n",
       "158           5.5          3.5           1.3          0.2      setosa\n",
       "159           5.7          2.8           4.1          1.3  versicolor\n",
       "160           NaN          3.2           4.7          1.4  versicolor\n",
       "161           NaN          2.7           3.9          1.2  versicolor\n",
       "162           NaN          3.4           1.5          0.2      setosa\n",
       "163           5.6          2.9           3.6          1.3  versicolor\n",
       "164           NaN          3.2           5.7          2.3   virginica\n",
       "165           NaN          2.8           5.6          2.2   virginica\n",
       "166           7.7          3.8           6.7          2.2   virginica\n",
       "167           NaN          2.6           6.9          2.3   virginica\n",
       "168           5.5          2.4           3.8          1.1  versicolor\n",
       "169           NaN          2.9           6.3          1.8   virginica"
      ]
     },
     "execution_count": 17,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## apilado de dataframes \n",
    "## los casos 151 a 170 contienen casos duplicados o\n",
    "## casos con datos faltantes\n",
    "w = pd.concat([df, y])\n",
    "w.index = list(range(170))\n",
    "w.tail(25)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "142           5.8          2.7           5.1          1.9   virginica\n",
       "150           5.6          3.0           4.5          1.5  versicolor\n",
       "151           4.9          3.1           1.5          0.1      setosa\n",
       "153           4.8          3.0           1.4          0.1      setosa\n",
       "155           4.9          3.1           1.5          0.2      setosa\n",
       "157           5.0          3.5           1.6          0.6      setosa\n",
       "158           5.5          3.5           1.3          0.2      setosa\n",
       "159           5.7          2.8           4.1          1.3  versicolor\n",
       "163           5.6          2.9           3.6          1.3  versicolor\n",
       "166           7.7          3.8           6.7          2.2   virginica\n",
       "168           5.5          2.4           3.8          1.1  versicolor"
      ]
     },
     "execution_count": 18,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## casos duplicados\n",
    "## note que el caso 142 aparece duplicado\n",
    "w[w.duplicated()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 19,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "139           6.9          3.1           5.4          2.1   virginica\n",
       "140           6.7          3.1           5.6          2.4   virginica\n",
       "141           6.9          3.1           5.1          2.3   virginica\n",
       "143           6.8          3.2           5.9          2.3   virginica\n",
       "144           6.7          3.3           5.7          2.5   virginica\n",
       "145           6.7          3.0           5.2          2.3   virginica\n",
       "146           6.3          2.5           5.0          1.9   virginica\n",
       "147           6.5          3.0           5.2          2.0   virginica\n",
       "148           6.2          3.4           5.4          2.3   virginica\n",
       "149           5.9          3.0           5.1          1.8   virginica\n",
       "152           NaN          2.4           3.3          1.0  versicolor\n",
       "154           NaN          3.4           1.7          0.2      setosa\n",
       "156           NaN          4.2           1.4          0.2      setosa\n",
       "160           NaN          3.2           4.7          1.4  versicolor\n",
       "161           NaN          2.7           3.9          1.2  versicolor\n",
       "162           NaN          3.4           1.5          0.2      setosa\n",
       "164           NaN          3.2           5.7          2.3   virginica\n",
       "165           NaN          2.8           5.6          2.2   virginica\n",
       "167           NaN          2.6           6.9          2.3   virginica\n",
       "169           NaN          2.9           6.3          1.8   virginica"
      ]
     },
     "execution_count": 19,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## casos únicos o no duplicados \n",
    "## incluye los casos con valores NA como únicos\n",
    "## note que se eliminaron varios casos entre el 151 y el 170\n",
    "w.drop_duplicates().tail(20)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 20,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "160     True\n",
       "161     True\n",
       "162     True\n",
       "163    False\n",
       "164     True\n",
       "165     True\n",
       "166    False\n",
       "167     True\n",
       "168    False\n",
       "169     True\n",
       "Name: Sepal_Length, dtype: bool"
      ]
     },
     "execution_count": 20,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## casos nulos\n",
    "w['Sepal_Length'].isnull().tail(10)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 21,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "152           NaN          2.4           3.3          1.0  versicolor\n",
       "154           NaN          3.4           1.7          0.2      setosa\n",
       "156           NaN          4.2           1.4          0.2      setosa\n",
       "160           NaN          3.2           4.7          1.4  versicolor\n",
       "161           NaN          2.7           3.9          1.2  versicolor\n",
       "162           NaN          3.4           1.5          0.2      setosa\n",
       "164           NaN          3.2           5.7          2.3   virginica\n",
       "165           NaN          2.8           5.6          2.2   virginica\n",
       "167           NaN          2.6           6.9          2.3   virginica\n",
       "169           NaN          2.9           6.3          1.8   virginica"
      ]
     },
     "execution_count": 21,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## hay que usar operadore lógicos para considerar más columnas\n",
    "w[w['Sepal_Length'].isnull()]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 22,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "     Sepal_Length  Sepal_Width  Petal_Length  Petal_Width     Species\n",
       "140           6.7          3.1           5.6          2.4   virginica\n",
       "141           6.9          3.1           5.1          2.3   virginica\n",
       "142           5.8          2.7           5.1          1.9   virginica\n",
       "143           6.8          3.2           5.9          2.3   virginica\n",
       "144           6.7          3.3           5.7          2.5   virginica\n",
       "145           6.7          3.0           5.2          2.3   virginica\n",
       "146           6.3          2.5           5.0          1.9   virginica\n",
       "147           6.5          3.0           5.2          2.0   virginica\n",
       "148           6.2          3.4           5.4          2.3   virginica\n",
       "149           5.9          3.0           5.1          1.8   virginica\n",
       "150           5.6          3.0           4.5          1.5  versicolor\n",
       "151           4.9          3.1           1.5          0.1      setosa\n",
       "153           4.8          3.0           1.4          0.1      setosa\n",
       "155           4.9          3.1           1.5          0.2      setosa\n",
       "157           5.0          3.5           1.6          0.6      setosa\n",
       "158           5.5          3.5           1.3          0.2      setosa\n",
       "159           5.7          2.8           4.1          1.3  versicolor\n",
       "163           5.6          2.9           3.6          1.3  versicolor\n",
       "166           7.7          3.8           6.7          2.2   virginica\n",
       "168           5.5          2.4           3.8          1.1  versicolor"
      ]
     },
     "execution_count": 22,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "## casos completos (sin faltantes)\n",
    "w.dropna().tail(20)"
   ]
  }
 ],
 "metadata": {
  "anaconda-cloud": {},
  "kernel_info": {
   "name": "python3"
  },
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  },
  "nteract": {
   "version": "0.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
