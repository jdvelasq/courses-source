{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {
    "toc-hr-collapsed": false
   },
   "source": [
    "Optimización usando ridge regression\n",
    "===\n",
    "\n",
    "* *30 min* | Ultima modificación: Marzo 11, 2020"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Preparación**"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import math\n",
    "import matplotlib.pyplot as plt\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "\n",
    "%matplotlib inline"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Función a aproximar usando un modelo de regresión"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "def f(x):\n",
    "    result = [math.exp(0.15 * u + 1) if u < 5 else math.exp(0.25 * u + 1) for u in x]\n",
    "    return np.array(result)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "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\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "np.random.seed(12345)\n",
    "x_real = np.linspace(start=0, stop=10, num=100)\n",
    "x_data = np.linspace(start=0, stop=10, num=16)\n",
    "d_real = f(x_real)\n",
    "d_data = f(x_data) + np.random.normal(0, 0.4, len(x_data))\n",
    "plt.plot(x_real, d_real, \"--\", color=\"gray\")\n",
    "plt.plot(x_data, d_data, \"o\", color=\"black\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "#\n",
    "# se generan dos variables adicionales u y z, que son\n",
    "# colineales con la variable original x\n",
    "#\n",
    "u_data = x_data + np.random.uniform(-0.3, 0.3, 16)\n",
    "z_data = x_data + np.random.uniform(-0.3, 0.3, 16)\n",
    "\n",
    "u_real = x_real + np.random.uniform(-0.3, 0.3, 100)\n",
    "z_real = x_real + np.random.uniform(-0.3, 0.3, 100)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Partición del conjunto de datos"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "# selecciona aleatoriamente 10 elementos del conjunto de datos\n",
    "index = sorted(np.random.choice(len(x_data), 10, replace=False))\n",
    "\n",
    "# muestra usada para estimar los parámetros del modelo\n",
    "x_fit = x_data[index]\n",
    "u_fit = u_data[index]\n",
    "z_fit = z_data[index]\n",
    "d_fit = d_data[index]\n",
    "\n",
    "# muestra usada para evaluar la generalización\n",
    "x_test = np.delete(x_data, index)\n",
    "d_test = np.delete(d_data, index)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x_data, d_data, \"o\", color=\"black\")\n",
    "plt.plot(x_real, d_real, \"--\", color=\"black\")\n",
    "plt.plot(x_test, d_test, \"o\", color=\"black\", fillstyle=\"none\", markersize=11)\n",
    ";"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Modelo de regresión"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$y_p = g(x_p, u_p, z_p) = \\exp(w_0 + w_1 x_p + w_2 u_p + w_3 z_p)$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {},
   "outputs": [],
   "source": [
    "def g_data(w):\n",
    "    return np.exp(w[0] + w[1] * x_data + w[2] * u_data + w[3] * z_data)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [],
   "source": [
    "def g_real(w):\n",
    "    return np.exp(w[0] + w[1] * x_real + w[2] * u_real + w[3] * z_real)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Función de pérdida cuadrática (suma de errores al cuadrado)"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\\text{SSE}(w) = \\sum_p [d_p - g(x_p, u_p, z_p)]^2$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [],
   "source": [
    "def SSE(w):\n",
    "    y = g_data(w)\n",
    "    y_fit = y[index]\n",
    "    y_test = np.delete(y, index)\n",
    "    sse_fit = sum(np.power(d_fit - y_fit, 2))\n",
    "    sse_test = sum(np.power(d_test - y_test, 2))\n",
    "    #\n",
    "    # note que la función devuelve simultaneamente\n",
    "    # los errores de ajuste y prueba\n",
    "    #\n",
    "    return sse_fit, sse_test"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Gradiente del modelo de regresión"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\\begin{split}\n",
    "\\frac{\\partial}{\\partial w} g(x_p, u_p, z_p) \n",
    " & = \\frac{\\partial}{\\partial w} \\left[ \\exp( w_0 + w_1 * x_p + w_2 * u_p + w_3 * z_p ) \\right] \\\\\n",
    " \\\\\n",
    " & = [g(x_p, u_p, z_p), x_p * g(x_p, u_p, z_p), u_p * g(x_p, u_p, z_p), z_p * g(x_p, u_p, z_p)] \n",
    "\\end{split}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 10,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gg(w):\n",
    "    result = []\n",
    "    f = g_data(w)\n",
    "    for a, b, c in zip(x_data, u_data, z_data):\n",
    "        m = math.exp(w[0] + w[1] * a + w[2] * b + w[3] * c)\n",
    "        result += [[m, a * m, b * m, c * m]]\n",
    "    return result"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Gradiente de la función de pérdida"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "\\begin{split}\n",
    "\\frac{\\partial}{\\partial w}\\text{SSE}(w) \n",
    "  & = \\sum_p -2 \\times [d_p - g(x_p, u_p, z_p)] \\times \\frac{\\partial}{\\partial w} g(x_p, u_p, z_p) + \\sum_m 2 \\lambda w_m  \\\\\n",
    "  & = -2 \\sum_p e_p \\times \\frac{\\partial}{\\partial w} g(x_p, u_p, z_p) + \\sum_m 2 \\lambda w_m \n",
    "\\end{split}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 11,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gSSE(w):\n",
    "    y = g_data(w)\n",
    "    y_fit = y[index]\n",
    "    e_fit = d_fit - y_fit\n",
    "    grd = gg(w)\n",
    "    grd = [u for i, u in enumerate(grd) if i in index]\n",
    "    grd = [[-2.0 * e_fit[i] * u for u in g] for i, g in enumerate(grd)]\n",
    "    grd = [[g[icol] for g in grd] for icol in range(len(w))]\n",
    "    grd = [sum(u) for u in grd]\n",
    "    return grd"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Corrección de los parámetros"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$ \\mathbf{w}_k = \\mathbf{w}_{k-1} - \\mu \\frac{\\partial}{\\partial \\mathbf{w}} \\text{SSE}(\\mathbf{w}_{k-1})$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 12,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mejora(w, mu):\n",
    "    grd = gSSE(w)\n",
    "    w = [u - mu * g for u, g in zip(w, grd)]\n",
    "    return w"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Proceso iterativo usando gradiente descendente"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w = [1.0, 0.25, 0.1, 0.1]  # coeficientes iniciales\n",
    "alpha = 0.0000000001\n",
    "\n",
    "sse_fit, sse_test = SSE(w)\n",
    "history_sse_fit = [sse_fit]\n",
    "history_sse_test = [sse_test]\n",
    "\n",
    "for epoch in range(40000):\n",
    "    w = mejora(w, alpha)\n",
    "    sse_fit, sse_test = SSE(w)\n",
    "    history_sse_fit.append(sse_fit)\n",
    "    history_sse_test.append(sse_test)\n",
    "\n",
    "y_real = g_real(w)\n",
    "\n",
    "plt.plot(history_sse_fit, \"--k\")\n",
    "plt.plot(history_sse_test, \"--r\")\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 14,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x_data, d_data, \"o\", color=\"black\")\n",
    "plt.plot(x_real, d_real, \"--\", color=\"black\")\n",
    "plt.plot(x_real, y_real, color=\"red\")\n",
    "plt.plot(x_test, d_test, \"o\", color=\"black\", fillstyle=\"none\", markersize=11)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 15,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(21.350259398156254, 2.272720487103581)"
      ]
     },
     "execution_count": 15,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SSE(w)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 16,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9915167089763974,\n",
       " 0.18465470423524666,\n",
       " 0.035041509185601775,\n",
       " 0.03572874285812191]"
      ]
     },
     "execution_count": 16,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "## Ridge regression"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Función de pérdida penalizada"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\\text{SSE}(w) = \\sum_p [d_p - g(x_p, u_p, z_p)]^2 + \\lambda \\sum_m w_m^2$$"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Gradiente de la función de pérdida"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "$$\n",
    "\\begin{split}\n",
    " \\frac{\\partial}{\\partial w}\\text{SSE}(w) \n",
    "   & = \\sum_p -2 \\times [d_p - g(x_p, u_p, z_p)] \\times \\frac{\\partial}{\\partial w} g(x_p, u_p, z_p) + \\sum_m 2 \\lambda w_m    \\\\ \n",
    "   & = -2 \\sum_p e_p \\times \\frac{\\partial}{\\partial w} g(x_p, u_p, z_p) + \\sum_m 2 \\lambda w_m \n",
    "\\end{split}\n",
    "$$"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "metadata": {},
   "outputs": [],
   "source": [
    "def gPen(w):\n",
    "    return [2 * u for u in w]"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 18,
   "metadata": {},
   "outputs": [],
   "source": [
    "def mejora_ridge(w, mu, lamb):\n",
    "    grd_sse = gSSE(w)\n",
    "    grd_pen = gPen(w)\n",
    "    grd = [u + lamb * v for u, v in zip(grd_sse, grd_pen)]\n",
    "    w = [u - mu * g for u, g in zip(w, grd)]\n",
    "    return w"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 30,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "w = [1.0, 0.25, 0.1, 0.1]  # coeficientes iniciales\n",
    "alpha = 0.0000000001\n",
    "lamb = 1000.0\n",
    "\n",
    "sse_fit, sse_test = SSE(w)\n",
    "history_sse_fit = [sse_fit]\n",
    "history_sse_test = [sse_test]\n",
    "\n",
    "sse_test_previous = None\n",
    "\n",
    "for epoch in range(40000):\n",
    "    w = mejora_ridge(w, alpha, lamb)\n",
    "    sse_fit, sse_test = SSE(w)\n",
    "    history_sse_fit.append(sse_fit)\n",
    "    history_sse_test.append(sse_test)\n",
    "\n",
    "y_real = g_real(w)\n",
    "\n",
    "plt.plot(history_sse_fit, \"--k\")\n",
    "plt.plot(history_sse_test, \"--r\")\n",
    ";"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 31,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.plot(x_data, d_data, \"o\", color=\"black\")\n",
    "plt.plot(x_real, d_real, \"--\", color=\"black\")\n",
    "plt.plot(x_real, y_real, color=\"red\")\n",
    "plt.plot(x_test, d_test, \"o\", color=\"black\", fillstyle=\"none\", markersize=11)\n",
    "plt.show()"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 32,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "(19.75511526525803, 1.3073650608058909)"
      ]
     },
     "execution_count": 32,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "SSE(w)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 33,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "text/plain": [
       "[0.9837048404980291,\n",
       " 0.183851821280731,\n",
       " 0.03542570210639068,\n",
       " 0.03610192080045692]"
      ]
     },
     "execution_count": 33,
     "metadata": {},
     "output_type": "execute_result"
    }
   ],
   "source": [
    "w"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "**Ejercicio.---** Cómpute el valor óptimo de la penalización."
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.9"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
