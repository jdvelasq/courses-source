{
 "cells": [
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "Opcional --- Implementación en R\n",
    "===\n",
    "\n",
    "* *30 min* | Última modificación: Junio 22, 2019"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [],
   "source": [
    "import pandas as pd\n",
    "import numpy as np\n",
    "import matplotlib.pyplot as plt\n",
    "%matplotlib inline\n",
    "%load_ext rpy2.ipython"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 2,
   "metadata": {},
   "outputs": [],
   "source": [
    "from sklearn.datasets import make_blobs\n",
    "\n",
    "NPOINTS = 150\n",
    "\n",
    "X, d = make_blobs(\n",
    "    n_samples=NPOINTS, \n",
    "    n_features=2,\n",
    "    centers=3,\n",
    "    cluster_std=0.8, \n",
    "    shuffle=False,  \n",
    "    random_state=12345)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 3,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n",
      "text/plain": [
       "<Figure size 432x288 with 1 Axes>"
      ]
     },
     "metadata": {
      "needs_background": "light"
     },
     "output_type": "display_data"
    }
   ],
   "source": [
    "plt.scatter(X[:50,0], X[:50,1], color='red')\n",
    "plt.scatter(X[50:100,0], X[50:100,1], color='blue')\n",
    "plt.scatter(X[100:,0], X[100:,1], color='green')\n",
    "plt.gca().set_aspect('equal', adjustable='box')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%R\n",
    "##\n",
    "## Este código es idéntico al del ADALINE, excepto\n",
    "## por ligeros cambios en la regla de aprendizaje\n",
    "##\n",
    "## Esta función entrena el modelo. Retorna una lista\n",
    "## con los pesos optimos w y la evolución del error\n",
    "##\n",
    "##   - x: un dataframe con las variables de entrada\n",
    "##   - d: un vector con la clase a que pertenece cada punto\n",
    "##   - mu: tasa de aprendizaje\n",
    "##   - max_iter: número total de iteraciones\n",
    "##\n",
    "train_perceptron <- function(x, d, mu, max_iter) {\n",
    "\n",
    "    ## crea un vector columna inicial de ceros \n",
    "    ## para los pesos del perceptrón\n",
    "    w <- matrix(rep(0, ncol(x) + 1), ncol(x) + 1, 1)\n",
    "    \n",
    "    ## agrega una columna de 1s a la matriz de las x\n",
    "    x <- cbind(rep(1, nrow(x)), x)\n",
    "\n",
    "    ## convierte el vector de clases a una matriz\n",
    "    ## para faciliar los computos\n",
    "    d <- matrix(d, length(d), 1)\n",
    "    \n",
    "    ## evolución del error\n",
    "    history <- c()\n",
    "    \n",
    "    for(i in 1:max_iter) {\n",
    "        ## selecciona aleatoriamente un ejemplo \n",
    "        n <- sample(1:nrow(x), 1)\n",
    "        \n",
    "        ## salida del combiador lineal adaptativo\n",
    "        ## para el ejemplo seleccionado\n",
    "        p <- x[n,] %*% w\n",
    "        \n",
    "        ## aplica el conmutador bipolar\n",
    "        p <- ifelse(p > 0, +1, -1)\n",
    "        \n",
    "        ## error instántaneo para el ejemplo\n",
    "        ## seleccionado\n",
    "        e <- d[n] - p  \n",
    "        \n",
    "        ## computa la corrección de los pesos\n",
    "        w <- w + 2 * mu * e[1,1] * matrix(x[n,], nrow(w), 1)\n",
    "        \n",
    "        ## almacena el error cuadrático para \n",
    "        ## el patrón seleccionado\n",
    "        history <- c(history, sum(e^2))\n",
    "    }\n",
    "    return(list(w, history))\n",
    "}"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [],
   "source": [
    "%%R\n",
    "##\n",
    "## Esta función computa la salida del \n",
    "## perceptrón para una matriz \n",
    "## de variables de entrada x\n",
    "##\n",
    "predict_perceptron <- function(m, x) {\n",
    "\n",
    "    ## agrega la columna de 1s\n",
    "    x <- cbind(rep(1, nrow(x)), x)\n",
    "    \n",
    "    ## computa la entrada neta\n",
    "    p <- x %*% m[[1]]\n",
    "    \n",
    "    ## aplica el conmutador bipolar y\n",
    "    ## la devuelve    \n",
    "    return(ifelse(p > 0, 1, -1))\n",
    "}"
   ]
  },
  {
   "cell_type": "markdown",
   "metadata": {},
   "source": [
    "### Entrenamiento del modelo"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [],
   "source": [
    "df = pd.DataFrame(\n",
    "    data=X,\n",
    "    columns=['x1', 'x2']\n",
    ")\n",
    "df['d'] = d"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 7,
   "metadata": {
    "scrolled": false
   },
   "outputs": [
    {
     "data": {
      "image/png": "\n"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R -i df\n",
    "##\n",
    "## Solución \n",
    "## Se codifica un vector para cada clase\n",
    "## un 1 indica que pertenece, y un -1 que\n",
    "## no pertenece\n",
    "##\n",
    "A <- ifelse(df$d == 0, 1, -1) # el punto pertenece a la clase A o no\n",
    "B <- ifelse(df$d == 1, 1, -1) # el punto pertenece a la clase B o no\n",
    "C <- ifelse(df$d == 2, 1, -1) # el punto pertenece a la clase C o no\n",
    "            \n",
    "##\n",
    "## Construye clasificadores usando la estrategia One-vs-the-Rest.\n",
    "## mA es el clasificador que indica si el punto x pertenece a la \n",
    "## clase A o al resto, y así sucesivamente.\n",
    "##\n",
    "mA <- train_perceptron(data.matrix(df[,1:2]), A, mu=0.002, max_iter=500) \n",
    "mB <- train_perceptron(data.matrix(df[,1:2]), B, mu=0.002, max_iter=500)\n",
    "mC <- train_perceptron(data.matrix(df[,1:2]), C, mu=0.003, max_iter=500)\n",
    "\n",
    "##\n",
    "## Se grafica la evolución del error para los clasificadores\n",
    "## construidos. Note que no hay convergencia para el\n",
    "## clasificador de la clase C.\n",
    "##\n",
    "options(repr.plot.width=11, repr.plot.height=4)\n",
    "par(mfrow=c(1,3))\n",
    "plot(mA[[2]], type = 'l', col = 'blue')\n",
    "plot(mB[[2]], type = 'l', col = 'red')\n",
    "plot(mC[[2]], type = 'l', col = 'black')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "     [,1]\n",
      "[1,]    1\n",
      "     [,1]\n",
      "[1,]    1\n",
      "     [,1]\n",
      "[1,]   -1\n"
     ]
    }
   ],
   "source": [
    "%%R\n",
    "##\n",
    "##  Pronostico para un punto que no pertence\n",
    "##  a la muestra de datos\n",
    "##\n",
    "print(predict_perceptron(mA, matrix(c(2.5, -4), 1, 2)))\n",
    "print(predict_perceptron(mB, matrix(c(2.5, -4), 1, 2)))\n",
    "print(predict_perceptron(mC, matrix(c(2.5, -4), 1, 2)))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "metadata": {},
   "outputs": [
    {
     "data": {
      "image/png": "\n"
     },
     "metadata": {},
     "output_type": "display_data"
    }
   ],
   "source": [
    "%%R\n",
    "options(repr.plot.width=4, repr.plot.height=4)\n",
    "\n",
    "with(df, plot(x1[d == 0], x2[d == 0], col = 'red', type = 'p', pch = 21, xlab='', ylab='',\n",
    "                      bg = 'red', cex = 0.7,\n",
    "                      xlim = c(-7.5, 12), \n",
    "                      ylim = c(-8, 4)))\n",
    "with(df, points(x1[d == 1], x2[d == 1], bg = 'blue',  pch = 21, cex = 0.7))\n",
    "with(df, points(x1[d == 2], x2[d == 2], bg = 'green', pch = 21, cex = 0.7))\n",
    "grid()\n",
    "\n",
    "abline(a = -mA[[1]][1] / mA[[1]][3], \n",
    "       b = -mA[[1]][2] / mA[[1]][3], lwd = 2, col = 'red')\n",
    "\n",
    "abline(a = -mB[[1]][1] / mB[[1]][3], \n",
    "       b = -mB[[1]][2] / mB[[1]][3], lwd = 2, col = 'blue')\n",
    "\n",
    "abline(a = -mC[[1]][1] / mC[[1]][3], \n",
    "       b = -mC[[1]][2] / mC[[1]][3], lwd = 2, col = 'green')"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.6.8"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
