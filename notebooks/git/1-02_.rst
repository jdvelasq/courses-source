Grabación de cambios en repositorios
=========================================================================================

Adaptado de: https://git-scm.com/book/es/v2/Inicio---Sobre-el-Control-de-Versiones-Acerca-del-Control-de-Versiones

.. ......................................................................................

* Inicialización de un repositorio existente.

    .. code-block:: bash

        $ mkdir git-demo
        $ cd git-demo
        $ git init
        hint: Using 'master' as the name for the initial branch. This default branch name
        hint: is subject to change. To configure the initial branch name to use in all
        hint: of your new repositories, which will suppress this warning, call:
        hint: 
        hint: 	git config --global init.defaultBranch <name>
        hint: 
        hint: Names commonly chosen instead of 'master' are 'main', 'trunk' and
        hint: 'development'. The just-created branch can be renamed via this command:
        hint: 
        hint: 	git branch -m <name>
        Initialized empty Git repository in /Users/jdvelasq/git-demo/.git/

        $ git status
        On branch master
        No commits yet
        nothing to commit (create/copy files and use "git add" to track)


* Chequeo del estodo de los archivos.

    .. code-block:: bash

        $ echo 'My Project' > README
        $ git status
        On branch master

        No commits yet

        Untracked files:
        (use "git add <file>..." to include in what will be committed)
            README

        nothing added to commit but untracked files present (use "git add" to track)        


* Tracking de los nuevos archivos.

    .. code-block:: bash

        $ git add README
        $ git status
        On branch master

        No commits yet

        Changes to be committed:
        (use "git rm --cached <file>..." to unstage)
            new file:   README


* Staging de archivos modificados.

    .. code-block:: bash

        $ git commit -m 'create README file'
        [master (root-commit) 2fa021b] create README file
        1 file changed, 1 insertion(+)
        create mode 100644 README

        $ git status
        On branch master
        nothing to commit, working tree clean

* Creación de un nuevo archivo.

    .. code-block:: bash

        $ echo 'print("Hola mundo cruel!")' > hello.py
        $ git status
        On branch master
        Untracked files:
        (use "git add <file>..." to include in what will be committed)
            hello.py

        nothing added to commit but untracked files present (use "git add" to track)

* Status short.

    .. code-block:: bash

        $ git status s
        ?? hello.py


* Archivos a ignorar.

    .. code-block:: bash

        $ echo "*.pyc" > .gitignore
        $ git status
        On branch master
        Untracked files:
        (use "git add <file>..." to include in what will be committed)
            .gitignore
            hello.py

        nothing added to commit but untracked files present (use "git add" to track)

* Almacenamiento de cambios.

    .. code-block:: bash

        $ git add hello.py
        $ git commit -m 'add hello.py'
        [master 657fc36] add hello.py
        1 file changed, 1 insertion(+)
        create mode 100644 hello.py        

        $ git add .gitignore
        $ git commit -m 'add .gitignore'
        [master 822d76e] add .gitignore
        1 file changed, 1 insertion(+)
        create mode 100644 .gitignore


* Modificación de un archivo.

    .. code-block:: bash

        $ echo 'Este es un proyecto de demostracion' > README
        $ git status
        On branch master
        Changes not staged for commit:
        (use "git add <file>..." to update what will be committed)
        (use "git restore <file>..." to discard changes in working directory)
            modified:   README

        no changes added to commit (use "git add" and/or "git commit -a")


* Restauración de los cambios.

    .. code-block:: bash

        $ git restore README
        $ cat README
        My Project


* Modificación de un archivo.

    .. code-block:: bash

        $ echo 'Este es un proyecto de demostracion' > README
        $ git add README

* Comparación enetre versiones de archivos.

    .. code-block:: bash

        $ git diff
        diff --git a/README b/README
        index c7146da..56266d3 100644
        --- a/README
        +++ b/README
        @@ -1 +1 @@
        -My Project
        +Este es un proyecto de demostracion
        

* Remoción de un archivo. 

    .. code-block:: bash

        $ git add README
        $ git commit -m 'modify README'
        $ git rm README
        rm 'README'

